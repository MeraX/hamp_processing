function make_radarNoiseMask(flightdates_mask,outfile,type)

% Input 'type' can either be 'noise' or 'calibration'

% Load noise info data (generated by hand, using lookForRadarCalManually)
mask = radar_mask;


noiseMask = cell(length(flightdates_mask),1);

for i=1:length(flightdates_mask)
    
    % Find entries that match the flight date and that contain the chosen
    % type
    indUse = find(strcmp(flightdates_mask{i},mask(:,1)) & strcmp(type,mask(:,3)));
    
    % Find radar file
    filepath = listFiles([getPathPrefix  getCampaignFolder(flightdates_mask{i}) ...
                            'all_nc/*radar*' flightdates_mask{i} '*.nc'],'fullpath', 'latest');
    
    % Read time
    uniTime = unixtime2sdn(ncread(filepath,'time'));
    % Read height
    uniHeight = ncread(filepath,'height');
    
    % Preallocate noise mask
    noiseMask{i} = zeros(length(uniHeight),length(uniTime));
    
    % If an entry for this date exists
    if ~isempty(indUse)
        
        % Loop all entries for this date
        for j=1:length(indUse)
            % Look for corresponding times in uniform time array
            [~, indTime] = min(abs(mask{indUse(j),2}-uniTime));
            
            % Set value in noise mask to true
            noiseMask{i}(:,indTime(1):indTime(2)) = 1;
        end
    
    end
    % Convert to logical array
    noiseMask{i} = logical(noiseMask{i});
end

% Set output variable name depending if this is done for noise or
% calibration
if strcmp(type,'calibration')
    calibrationMask = noiseMask;
    outvar = 'calibrationMask';
else
    outvar = 'noiseMask';
end

% Save data
if exist(outfile,'file')
    save(outfile,outvar,'-append')
else
    save(outfile,outvar,'-v7.3')
end